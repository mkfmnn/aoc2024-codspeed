name: CodSpeed

on:
  push:
    branches:
      - "main"
  pull_request:
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  benchmarks:
    name: Run benchmarks
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: '-C target-cpu=native'
    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain, cache and cargo-codspeed binary
        uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed

      - name: Cache input data
        id: cache-input
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: data
          key: input-day3

      - if: ${{ steps.cache-input.outputs.cache-hit != 'true' }}
        name: Get input data
        run: |
          mkdir -p data
          curl -b "session=${{ secrets.AOC_TOKEN }}" https://adventofcode.com/2024/day/1/input -o data/input1.txt
          curl -b "session=${{ secrets.AOC_TOKEN }}" https://adventofcode.com/2024/day/2/input -o data/input2.txt
          curl -b "session=${{ secrets.AOC_TOKEN }}" https://adventofcode.com/2024/day/3/input -o data/input3.txt

      - name: Build the benchmark target(s)
        run: cargo codspeed build

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run
